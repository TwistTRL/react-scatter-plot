{"version":3,"sources":["lib/PlottingUtils.js","lib/ScatterPlot.jsx","lib/YAxis.js","lib/PlotAxisGrid.js","lib/index.js","lib/ScatterPlotBundle.js","lib/PlotInteraction/DragOverlay.js","lib/PlotInteraction/CountDown.js","lib/PlotInteraction/PlotInteractionBox.js","lib/PlotInteraction/PlotInteractionBoxProvider.js","index.js"],"names":["toDomYCoord_Linear","height","minY","maxY","dataY","ScatterPlot","props","canvasW","width","canvasH","dataPointColorCanvasCache","dotCanvasSize","this","scatterPlotCanvas","refs","scatterPlotCtx","getContext","drawScatterPlot","prevProps","prevState","nextProps","nextState","isEqual","state","ctx","dataSets","dataPointColors","visibleXRange","visibleYRange","xAxisKey","yAxisKey","configs","undefined","minX","maxX","plotStyling","dotSize","clearRect","i","length","curDataSet","j","curDataObj","domY","domX","Math","floor","circle","getCircle","drawImage","color","size","cachedDataPointColorCanvas","canvas","document","createElement","arc","PI","fillStyle","fill","className","ref","style","position","Component","round5","x","round","ceil","YAxis","yAxisSkipInterval","yAxisLabelPadding","axis","generateYAxisLabels","yAxisCanvas","yAxisCtx","drawYAxis","getYAxisLabelSkipInterval","labelPadding","labelTextHeight","numOfLabelsCanFit","yAxisLabels","curYAxisLabel","push","yAxisLabelInterval","beginPath","strokeStyle","lineWidth","font","textBaseline","textAlign","moveTo","lineTo","stroke","fillText","n","parseInt","PlotAxisGrid","plotAxisGridCanvas","plotAxisGridCtx","drawYAxisGrid","yAxisIntervals","yAxisSpan","generateYAxisIntervals","ScatterPlotBundle","isRenderPlotOnly","isDynamicXAxis","yAxisPadding","isDynamicYAxis","Number","MAX_VALUE","MIN_VALUE","visibleYRangeDistance","plotWidth","borderCollapse","DragOverlay","handleMouseMove","bind","handleMouseUp","cursor","addEventListener","removeEventListener","ev","stopPropagation","mouseMoveHandler","mouseUpHandler","PureComponent","CountDown","timeout","callback","setTimeout","clearTimeout","MODE_HOVERING","ACTION_MOUSEDOWN","ACTION_MOUSEMOVE","ACTION_MOUSEUP","ACTION_TIMEOUT","INTERACTION_MODEL_PANNING","PlotInteractionBox","handleMouseMove_Hovering","hoveringHandler","getCustomEventObject","handleMouseOut_Hovering","hoverEndHandler","handleMouseDown_Hovering","preventDefault","myEV","initialMouseDownPosition","transition","clickTimeout","autoSelectingTimeout","handleMouseMove_Clicking","selectingHandler","abs","handleMouseUp_Clicking","clickHandler","doubleClickHandler","prevClickTimeStamp","timeStamp","handleMouseMove_AutoSelecting","start","end","handleMouseUp_AutoSelecting","handleMouseMove_Selecting","handleMouseUp_Selecting","selectedHandler","mode","React","createRef","handleMouseMove_Panning","handleMouseUp_Panning","children","onMouseMove","onMouseOut","onMouseDown","action","nextMode","transitionGraph","setState","current","getBoundingClientRect","left","top","clientX","clientY","panningHandler","pannedHandler","PlotInteractionBoxProvider","handleHovering","hoveringPosition","handleHoverPosChange","handleHoverEnd","handleClick","clickPosition","handleDoubleClick","doubleClickPosition","handleSelecting","selectingPositions","handleSelected","selectedPositions","panningPositions","pannedPositions","handlePanning","handlePanned","render","handlePan","getRandomColor","random","App","currentOverlay","prevMaxY","prevPanDist","dataSetCount","moment","generateDummyData","console","log","xRange","yRange","dataFreq","min","max","dummyData","curX","time","value","e","xAxisPadding","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bed63aaf.chunk.js","sourcesContent":["//height: canvas px\n// minY: lowest value\n// maxY: highest value\n// dataY: value\nexport function toDomYCoord_Linear(height, minY, maxY, dataY) {\n    return height - (dataY - minY) / ((maxY - minY) / height);\n}\n\nexport function fromDomYCoord_Linear(height, minY, maxY, domY) {\n    return (height - domY) * ((maxY - minY) / height) + minY;\n}\n\nexport function toDomXCoord_Linear(width, minX, maxX, dataX) {\n    return (dataX - minX) / ((maxX - minX) / width);\n}\n\nexport function fromDomXCoord_Linear(width, minX, maxX, domX) {\n    return domX * ((maxX - minX) / width) + minX;\n}","import React, { Component } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { toDomYCoord_Linear, toDomXCoord_Linear } from \"./PlottingUtils\";\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasW = this.props.width;\n    this.canvasH = this.props.height;\n    // {color: canvas}\n    this.dataPointColorCanvasCache = {};\n    this.dotCanvasSize = 6;\n  }\n\n  componentDidMount() {\n    this.scatterPlotCanvas = this.refs.scatterPlotCanvas;\n    this.scatterPlotCtx = this.scatterPlotCanvas.getContext(\"2d\");\n    this.drawScatterPlot(this.scatterPlotCtx);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.drawScatterPlot(this.scatterPlotCtx);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || this.state !== nextState;\n  }\n\n  drawScatterPlot(ctx) {\n    let {\n      dataSets,\n      dataPointColors,\n      visibleXRange,\n      visibleYRange,\n      xAxisKey,\n      yAxisKey,\n      configs\n    } = this.props;\n\n    if (dataSets === undefined) {\n      return;\n    }\n\n    let dotCanvasSize =\n      configs.plotStyling.dotSize > 0\n        ? configs.plotStyling.dotSize\n        : this.dotCanvasSize;\n\n    ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n\n    for (let i = 0; i < dataSets.length; i++) {\n      let curDataSet = dataSets[i];\n      if (curDataSet.length > 0) {\n        for (let j = 0; j < curDataSet.length; j++) {\n          let curDataObj = curDataSet[j];\n          if (\n            curDataObj[xAxisKey] >= visibleXRange[0] &&\n            curDataObj[xAxisKey] <= visibleXRange[1]\n          ) {\n            let domY,\n              domX = Math.floor(\n                toDomXCoord_Linear(\n                  this.canvasW,\n                  visibleXRange[0],\n                  visibleXRange[1],\n                  curDataObj[xAxisKey]\n                ) -\n                  dotCanvasSize / 2\n              );\n\n            let circle = this.getCircle(dataPointColors[i], dotCanvasSize);\n\n            domY = Math.floor(\n              toDomYCoord_Linear(\n                this.canvasH,\n                visibleYRange[0],\n                visibleYRange[1],\n                curDataObj[yAxisKey]\n              ) -\n                dotCanvasSize / 2\n            );\n\n            ctx.drawImage(circle, domX, domY);\n          }\n        }\n      }\n    }\n  }\n\n  getCircle(color, size = 6) {\n    let cachedDataPointColorCanvas = this.dataPointColorCanvasCache[\n      color + size\n    ];\n\n    if (cachedDataPointColorCanvas === undefined) {\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = size;\n      canvas.height = size;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.arc(size / 2, size / 2, size / 3, 0, 2 * Math.PI);\n      ctx.fillStyle = color;\n      ctx.fill();\n      cachedDataPointColorCanvas = canvas;\n      this.dataPointColorCanvasCache[color + size] = canvas;\n    }\n\n    return cachedDataPointColorCanvas;\n  }\n\n  render() {\n    const styles = {\n      scatterPlotCanvas: {\n        position: \"absolute\"\n      }\n    };\n\n    return (\n      <canvas\n        className=\"scatter-plot-canvas\"\n        ref=\"scatterPlotCanvas\"\n        width={this.canvasW}\n        height={this.canvasH}\n        style={styles.scatterPlotCanvas}\n      />\n    );\n  }\n}\n\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\nimport { toDomYCoord_Linear, toDomXCoord_Linear } from \"./PlottingUtils\";\nimport isEqual from \"lodash.isequal\";\n\nfunction round5(x) {\n  return Math.round(Math.ceil(x / 5) * 5);\n}\n\nfunction round2(x) {\n  return Math.round(Math.ceil(x / 2) * 2);\n}\n\nclass YAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasW = this.props.canvasW;\n    this.canvasH = this.props.canvasH;\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.yAxisSkipInterval = 50;\n  }\n\n  componentDidMount() {\n    let yAxisLabelPadding = this.props.configs.axis.yAxisLabelPadding;\n    this.generateYAxisLabels(this.maxY * 10);\n    this.yAxisCanvas = this.refs.yAxisCanvas;\n    this.yAxisCtx = this.yAxisCanvas.getContext(\"2d\");\n    this.drawYAxis(\n      this.yAxisCtx,\n      this.getYAxisLabelSkipInterval(\n        this.minY,\n        this.maxY,\n        this.canvasH,\n        yAxisLabelPadding,\n        20\n      )\n    );\n  }\n\n  componentDidUpdate() {\n    let yAxisLabelPadding = this.props.configs.axis.yAxisLabelPadding;\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.drawYAxis(\n      this.yAxisCtx,\n      this.getYAxisLabelSkipInterval(\n        this.minY,\n        this.maxY,\n        this.canvasH,\n        yAxisLabelPadding,\n        20\n      )\n    );\n  }\n\n  toDomYCoord_Linear(height, minY, maxY, dataY) {\n    return height - (dataY - minY) / ((maxY - minY) / height);\n  }\n\n  getYAxisLabelSkipInterval(\n    minY,\n    maxY,\n    height,\n    labelPadding = 20,\n    labelTextHeight\n  ) {\n    let numOfLabelsCanFit = Math.round(\n      height / (labelTextHeight + labelPadding)\n    );\n\n    return round5((maxY - minY) / numOfLabelsCanFit);\n  }\n\n  generateYAxisLabels(maxY) {\n    this.yAxisLabels = [];\n    let yAxisLabelInterval = 1;\n\n    for (\n      let curYAxisLabel = 0;\n      curYAxisLabel < round5(maxY);\n      curYAxisLabel += yAxisLabelInterval\n    ) {\n      this.yAxisLabels.push(curYAxisLabel);\n    }\n  }\n\n  // TODO: CACHE TEXT CANVAS\n  drawYAxis(ctx, yAxisLabelInterval) {\n    let textXPadding = 10;\n    let yAxisHorizontalLineWidth = 5;\n\n    // clear canvas\n    ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n    ctx.beginPath();\n\n    // y-axis vertical line styling\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 2.5;\n    // text styling\n    ctx.font = \"500 13px MuseoSans, sans-serif\";\n    ctx.lineWidth = 0.6;\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"right\";\n    ctx.fillStyle = \"gray\";\n\n    // draw the y-axis vertical line\n    ctx.moveTo(this.canvasW, 5);\n    ctx.lineTo(this.canvasW, this.canvasH - 5);\n    ctx.stroke();\n\n    // draw the positive labels and horizontal lines\n    for (\n      let i = 0;\n      i < this.maxY + yAxisLabelInterval;\n      i += yAxisLabelInterval\n    ) {\n      if (i % yAxisLabelInterval === 0) {\n        let domY = Math.floor(\n          this.toDomYCoord_Linear(\n            this.canvasH,\n            this.minY,\n            this.maxY,\n            this.yAxisLabels[i]\n          )\n        );\n        ctx.moveTo(this.canvasW - yAxisHorizontalLineWidth, domY);\n        ctx.lineTo(this.canvasW, domY);\n        ctx.fillText(this.yAxisLabels[i], this.canvasW - textXPadding, domY);\n      }\n    }\n\n    if (this.minY < 0) {\n      for (\n        let i = 0;\n        i < this.maxY + yAxisLabelInterval;\n        i += yAxisLabelInterval\n      ) {\n        if (i % yAxisLabelInterval === 0 && -this.yAxisLabels[i] >= this.minY) {\n          let domY = Math.floor(\n            this.toDomYCoord_Linear(\n              this.canvasH,\n              this.minY,\n              this.maxY,\n              -this.yAxisLabels[i]\n            )\n          );\n          ctx.moveTo(this.canvasW - yAxisHorizontalLineWidth, domY);\n          ctx.lineTo(this.canvasW, domY);\n          ctx.fillText(-this.yAxisLabels[i], this.canvasW - textXPadding, domY);\n        }\n      }\n    }\n\n    ctx.stroke();\n  }\n\n  roundToNearestTenth(n) {\n    return (parseInt(n / 10, 10) + 1) * 10;\n  }\n\n  render() {\n    // width, height, data from props\n    // reserve className for parent\n    return (\n      <canvas\n        className=\"plot-y-axis\"\n        ref=\"yAxisCanvas\"\n        width={this.canvasW}\n        height={this.canvasH}\n      />\n    );\n  }\n}\n\nexport default YAxis;\n","import React, { Component } from \"react\";\nimport { toDomYCoord_Linear, toDomXCoord_Linear } from \"./PlottingUtils\";\nimport isEqual from \"lodash.isequal\";\n\nfunction round5(x) {\n  return Math.round(Math.ceil(x / 5) * 5);\n}\n\nfunction round2(x) {\n  return Math.round(Math.ceil(x / 2) * 2);\n}\n\nclass PlotAxisGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasW = this.props.canvasW;\n    this.canvasH = this.props.canvasH;\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n  }\n\n  componentDidMount() {\n    this.plotAxisGridCanvas = this.refs.plotAxisGridCanvas;\n    this.plotAxisGridCtx = this.plotAxisGridCanvas.getContext(\"2d\");\n    this.drawYAxisGrid(this.plotAxisGridCtx);\n  }\n\n  componentDidUpdate() {\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.drawYAxisGrid(this.plotAxisGridCtx);\n  }\n\n  generateYAxisIntervals(minY, maxY, height, labelPadding, labelTextHeight) {\n    this.yAxisIntervals = [];\n    let numOfLabelsCanFit = Math.round(\n      height / (labelTextHeight + labelPadding)\n    );\n    let yAxisSpan = round5(maxY - minY);\n    let yAxisLabelInterval = round5(yAxisSpan / numOfLabelsCanFit);\n\n    for (\n      let curYAxisLabel = 0;\n      curYAxisLabel < round5(maxY);\n      curYAxisLabel += yAxisLabelInterval\n    ) {\n      this.yAxisIntervals.push(curYAxisLabel);\n    }\n  }\n\n  drawYAxisGrid(ctx) {\n    this.generateYAxisIntervals(this.minY, this.maxY, this.canvasH, 20, 20);\n\n    // clear canvas\n    ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n    ctx.beginPath();\n    // y-axis vertical line styling\n    ctx.strokeStyle = \"rgba(211,211,211, 0.6)\";\n    ctx.lineWidth = 1;\n\n    for (let i = 0; i < this.yAxisIntervals.length; i++) {\n      let domY = toDomYCoord_Linear(\n        this.canvasH,\n        this.minY,\n        this.maxY,\n        this.yAxisIntervals[i]\n      );\n      ctx.moveTo(0, domY);\n      ctx.lineTo(this.canvasW, domY);\n    }\n    ctx.stroke();\n\n    if (this.minY < 0) {\n      for (let i = 0; i < this.yAxisIntervals.length; i++) {\n        let domY = toDomYCoord_Linear(\n          this.canvasH,\n          this.minY,\n          this.maxY,\n          -this.yAxisIntervals[i]\n        );\n        ctx.moveTo(0, domY);\n        ctx.lineTo(this.canvasW, domY);\n      }\n      ctx.stroke();\n    }\n  }\n\n  roundToNearestTenth(n) {\n    return (parseInt(n / 10, 10) + 1) * 10;\n  }\n\n  render() {\n    // width, height, data from props\n    // reserve className for parent\n    return (\n      <canvas\n        className=\"plot-axis-grid\"\n        ref=\"plotAxisGridCanvas\"\n        width={this.canvasW}\n        height={this.canvasH}\n      />\n    );\n  }\n}\n\nexport default PlotAxisGrid;\n","import ScatterPlotBundle from \"./ScatterPlotBundle\";\nexport default ScatterPlotBundle;","import React, { Component } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport ScatterPlot from \"./ScatterPlot\";\nimport YAxis from \"./YAxis\";\nimport PlotAxisGrid from \"./PlotAxisGrid\";\n\nfunction round5(x) {\n  return Math.ceil(x / 5) * 5;\n}\n\nclass ScatterPlotBundle extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || this.state !== nextState;\n  }\n\n  render() {\n    const {\n      dataSets,\n      dataPointColors,\n      width,\n      height,\n      minY,\n      maxY,\n      xAxisKey,\n      yAxisKey,\n      configs,\n      isRenderPlotOnly\n    } = this.props;\n\n    if (dataSets.length < 1 || dataSets === undefined) {\n      return null;\n    }\n\n    let { isDynamicXAxis, isDynamicYAxis, yAxisPadding } = configs.axis;\n    let visibleYRange = [Number.MAX_VALUE, Number.MIN_VALUE];\n    let visibleXRange = isDynamicXAxis\n      ? this.props.visibleXRange\n      : [Number.MAX_VALUE, Number.MIN_VALUE];\n    let visibleYRangeDistance = 0;\n    let yAxisPanelWidth = 40;\n    let plotWidth = width - yAxisPanelWidth;\n\n    visibleYRangeDistance = round5(visibleYRange[1] - visibleYRange[0]);\n    visibleYRange[0] -=\n      yAxisPadding > 0 ? yAxisPadding : visibleYRangeDistance * 0.1; // TODO: figure out y padding\n    visibleYRange[1] +=\n      yAxisPadding > 0 ? yAxisPadding : visibleYRangeDistance * 0.1;\n\n    if (!isRenderPlotOnly) {\n      visibleYRange = maxY !== null ? [minY, maxY] : visibleYRange;\n      return (\n        <table className=\"chart-table\" style={{ borderCollapse: \"collapse\" }}>\n          <tbody>\n            <tr className=\"chart-table-row\">\n              <td\n                className=\"chart-table-col\"\n                style={{ width: yAxisPanelWidth }}\n              >\n                {\" \"}\n                <YAxis\n                  canvasW={yAxisPanelWidth}\n                  canvasH={height}\n                  minY={visibleYRange[0]}\n                  maxY={visibleYRange[1]}\n                  configs={configs}\n                />\n              </td>\n              <td className=\"chart-table-col\" style={{ width: plotWidth }}>\n                {\" \"}\n                <div style={{ position: \"absolute\" }}>\n                  <PlotAxisGrid\n                    canvasW={plotWidth}\n                    canvasH={height}\n                    minY={visibleYRange[0]}\n                    maxY={visibleYRange[1]}\n                    configs={configs}\n                  />\n                </div>\n                <div style={{ position: \"absolute\" }}>\n                  <ScatterPlot\n                    dataSets={dataSets}\n                    dataPointColors={dataPointColors}\n                    visibleXRange={visibleXRange}\n                    visibleYRange={visibleYRange}\n                    width={plotWidth}\n                    height={height}\n                    xAxisKey={xAxisKey}\n                    yAxisKey={yAxisKey}\n                    configs={configs}\n                  />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <ScatterPlot\n        dataSets={dataSets}\n        dataPointColors={dataPointColors}\n        visibleXRange={visibleXRange}\n        visibleYRange={maxY !== null ? [minY, maxY] : visibleYRange}\n        width={plotWidth}\n        height={height}\n        xAxisKey={xAxisKey}\n        yAxisKey={yAxisKey}\n        configs={configs}\n      />\n    );\n  }\n}\n\nexport default ScatterPlotBundle;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n// CSS\nimport \"./DragOverlay.css\";\n\nclass DragOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  render() {\n    let { cursor } = this.props;\n    return <div className=\"fullscreen\" style={{ cursor: cursor }}></div>;\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.handleMouseMove, true);\n    document.addEventListener(\"mouseup\", this.handleMouseUp, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", this.handleMouseMove, true);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp, true);\n  }\n\n  handleMouseMove(ev) {\n    ev.stopPropagation();\n    let { mouseMoveHandler } = this.props;\n    mouseMoveHandler(ev);\n  }\n\n  handleMouseUp(ev) {\n    ev.stopPropagation();\n    let { mouseUpHandler } = this.props;\n    mouseUpHandler(ev);\n  }\n}\n\nDragOverlay.propTypes = {\n  cursor: PropTypes.string.isRequired,\n  mouseMoveHandler: PropTypes.func.isRequired,\n  mouseUpHandler: PropTypes.func.isRequired\n};\n\nexport default DragOverlay;\n","import {PureComponent} from \"react\"\n\nclass CountDown extends PureComponent{\n  render(){\n    return null\n  }\n  \n  componentDidMount(){\n    let {timeout,callback} = this.props\n    this.timeout = setTimeout(callback,timeout)\n  }\n\n  componentDidUpdate(){\n    clearTimeout(this.timeout)\n    let {timeout,callback} = this.props\n    this.timeout = setTimeout(callback,timeout)\n  }\n\n  componentWillUnmount(){\n    clearTimeout(this.timeout)\n  }\n}\n\nexport default CountDown\n","import React, { PureComponent } from \"react\";\n// Components\nimport DragOverlay from \"./DragOverlay\";\nimport CountDown from \"./CountDown\";\n\n// CSS\nimport \"./PlotInteractionBox.css\";\n\nexport const MODE_HOVERING = \"hovering\";\nexport const MODE_CLICKING = \"clicking\";\nexport const MODE_AUTOSELECTING = \"autoSelecting\";\nexport const MODE_SELECTING = \"selecting\";\nexport const MODE_PANNING = \"panning\";\n\nexport const ACTION_MOUSEDOWN = \"mouseDown\";\nexport const ACTION_MOUSEMOVE = \"mouseMove\";\nexport const ACTION_MOUSEUP = \"mouseUp\";\nexport const ACTION_TIMEOUT = \"timeout\";\n\nexport const INTERACTION_MODEL_DEFAULT = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: {\n    [ACTION_TIMEOUT]: MODE_AUTOSELECTING,\n    [ACTION_MOUSEMOVE]: MODE_SELECTING,\n    [ACTION_MOUSEUP]: MODE_HOVERING\n  },\n  [MODE_AUTOSELECTING]: {\n    [ACTION_TIMEOUT]: MODE_PANNING,\n    [ACTION_MOUSEMOVE]: MODE_SELECTING\n  },\n  [MODE_SELECTING]: { [ACTION_MOUSEUP]: MODE_HOVERING },\n  [MODE_PANNING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nexport const INTERACTION_MODEL_SELECTING = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: {\n    [ACTION_TIMEOUT]: MODE_SELECTING,\n    [ACTION_MOUSEMOVE]: MODE_SELECTING,\n    [ACTION_MOUSEUP]: MODE_HOVERING\n  },\n  [MODE_SELECTING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nexport const INTERACTION_MODEL_PANNING = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: {\n    [ACTION_TIMEOUT]: MODE_PANNING,\n    [ACTION_MOUSEMOVE]: MODE_PANNING,\n    [ACTION_MOUSEUP]: MODE_HOVERING\n  },\n  [MODE_PANNING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nexport const INTERACTION_MODEL_BARE = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nclass PlotInteractionBox extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { mode: MODE_HOVERING };\n    this.ref = React.createRef();\n    this.initialMouseDownPosition = null;\n    this.prevClickTimeStamp = null;\n    this.handleMouseMove_Panning = this.handleMouseMove_Panning.bind(this);\n    this.handleMouseUp_Panning = this.handleMouseUp_Panning.bind(this);\n  }\n\n  render() {\n    let { width, height, children } = this.props;\n    let style = { width, height };\n\n    switch (this.state.mode) {\n      case MODE_HOVERING:\n        return (\n          <div>\n            <div\n              ref={this.ref}\n              style={style}\n              onMouseMove={this.handleMouseMove_Hovering}\n              onMouseOut={this.handleMouseOut_Hovering}\n              onMouseDown={this.handleMouseDown_Hovering}\n            >\n              {children}\n            </div>\n          </div>\n        );\n      case MODE_CLICKING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_Clicking}\n              mouseUpHandler={this.handleMouseUp_Clicking}\n              cursor=\"point\"\n            />\n            <CountDown timeout={200} callback={this.clickTimeout} />\n          </div>\n        );\n      case MODE_AUTOSELECTING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_AutoSelecting}\n              mouseUpHandler={this.handleMouseUp_AutoSelecting}\n              cursor=\"nesw-resize\"\n            />\n            <CountDown timeout={500} callback={this.autoSelectingTimeout} />\n          </div>\n        );\n      case MODE_SELECTING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_Selecting}\n              mouseUpHandler={this.handleMouseUp_Selecting}\n              cursor=\"nesw-resize\"\n            />\n          </div>\n        );\n      case MODE_PANNING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_Panning}\n              mouseUpHandler={this.handleMouseUp_Panning}\n              cursor=\"grabbing\"\n            />\n          </div>\n        );\n      default:\n        return <p>{this.state.mode}</p>;\n      //throw new Error(\"ProgrammerTooDumbError\");\n    }\n  }\n\n  transition(action) {\n    let { transitionGraph } = this.props;\n    let { mode } = this.state;\n    let nextMode = transitionGraph[mode][action];\n    if (nextMode) {\n      this.setState({ mode: nextMode });\n    }\n  }\n\n  getCustomEventObject(ev) {\n    let { left, top } = this.ref.current.getBoundingClientRect();\n    let { clientX, clientY } = ev;\n    let domX = clientX - left;\n    let domY = clientY - top;\n    return { domX, domY, clientX, clientY };\n  }\n\n  handleMouseMove_Hovering = ev => {\n    let { hoveringHandler } = this.props;\n    let myEV = this.getCustomEventObject(ev);\n    hoveringHandler(myEV);\n  };\n\n  handleMouseOut_Hovering = ev => {\n    let { hoverEndHandler } = this.props;\n    hoverEndHandler();\n  };\n\n  handleMouseDown_Hovering = ev => {\n    let { hoverEndHandler } = this.props;\n    ev.preventDefault();\n    let myEV = this.getCustomEventObject(ev);\n    this.initialMouseDownPosition = myEV;\n    hoverEndHandler();\n    this.transition(ACTION_MOUSEDOWN);\n  };\n\n  clickTimeout = () => {\n    this.transition(ACTION_TIMEOUT);\n  };\n\n  autoSelectingTimeout = () => {\n    this.transition(ACTION_TIMEOUT);\n  };\n\n  handleMouseMove_Clicking = ev => {\n    let { selectingHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    if (\n      Math.abs(myEV.domX - initialMouseDownPosition.domX) < 10 ||\n      Math.abs(myEV.domY - initialMouseDownPosition.domX) < 10\n    ) {\n      return;\n    } else {\n      this.transition(ACTION_MOUSEMOVE);\n    }\n  };\n\n  handleMouseUp_Clicking = ev => {\n    let { clickHandler, doubleClickHandler } = this.props;\n    let { prevClickTimeStamp } = this;\n    let myEV = this.getCustomEventObject(ev);\n    if (\n      prevClickTimeStamp === null ||\n      prevClickTimeStamp + 200 < ev.timeStamp\n    ) {\n      this.prevClickTimeStamp = ev.timeStamp;\n      clickHandler(myEV);\n    } else {\n      this.prevClickTimeStamp = null;\n      doubleClickHandler(myEV);\n    }\n    this.transition(ACTION_MOUSEUP);\n  };\n\n  handleMouseMove_AutoSelecting = ev => {\n    let { selectingHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    if (\n      Math.abs(myEV.domX - initialMouseDownPosition.domX) < 10 ||\n      Math.abs(myEV.domY - initialMouseDownPosition.domX) < 10\n    ) {\n      return;\n    } else {\n      selectingHandler({ start: initialMouseDownPosition, end: myEV });\n      this.transition(ACTION_MOUSEMOVE);\n    }\n  };\n\n  handleMouseUp_AutoSelecting = ev => {\n    this.transition(ACTION_MOUSEUP);\n  };\n\n  handleMouseMove_Selecting = ev => {\n    let { selectingHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    selectingHandler({ start: initialMouseDownPosition, end: myEV });\n  };\n\n  handleMouseUp_Selecting = ev => {\n    let { selectedHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    selectedHandler({ start: initialMouseDownPosition, end: myEV });\n    this.transition(ACTION_MOUSEUP);\n  };\n\n  handleMouseMove_Panning(ev) {\n    let { panningHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    panningHandler({ start: initialMouseDownPosition, end: myEV });\n  }\n\n  handleMouseUp_Panning(ev) {\n    let { pannedHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    pannedHandler({ start: initialMouseDownPosition, end: myEV });\n    this.transition(ACTION_MOUSEUP);\n  }\n}\n\nexport default PlotInteractionBox;\n","import React, { Component } from \"react\";\nimport PlotInteractionBox, {\n  INTERACTION_MODEL_PANNING\n} from \"./PlotInteractionBox\";\n\nclass PlotInteractionBoxProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoveringPosition: null,\n      clickPosition: null,\n      doubleClickPosition: null,\n      selectingPositions: null,\n      selectedPositions: null,\n      panningPositions: null,\n      pannedPositions: null\n    };\n    this.handlePanning = this.handlePanning.bind(this);\n    this.handlePanned = this.handlePanned.bind(this);\n  }\n\n  render() {\n    let { render, width, height } = this.props;\n    return (\n      <PlotInteractionBox\n        width={width}\n        height={height}\n        transitionGraph={INTERACTION_MODEL_PANNING}\n        hoveringHandler={this.handleHovering}\n        hoverEndHandler={this.handleHoverEnd}\n        clickHandler={this.handleClick}\n        doubleClickHandler={this.handleDoubleClick}\n        selectingHandler={this.handleSelecting}\n        selectedHandler={this.handleSelected}\n        panningHandler={this.handlePanning}\n        pannedHandler={this.handlePanned}\n      >\n        {render(this.state)}\n      </PlotInteractionBox>\n    );\n  }\n\n  handleHovering = hoveringPosition => {\n    this.setState({ ...this.state, hoveringPosition });\n    if (this.props.handleHoverPosChange) {\n      this.props.handleHoverPosChange(hoveringPosition);\n    }\n  };\n\n  handleHoverEnd = () => {\n    this.setState({ ...this.state, hoveringPosition: null });\n    if (this.props.handleHoverPosChange) {\n      this.props.handleHoverPosChange(null);\n    }\n  };\n\n  handleClick = clickPosition => {\n    this.setState({\n      ...this.state,\n      clickPosition\n    });\n    if (this.props.handleClick) {\n      this.props.handleClick();\n    }\n  };\n\n  handleDoubleClick = doubleClickPosition => {\n    this.setState({ ...this.state, doubleClickPosition });\n  };\n\n  handleSelecting = selectingPositions => {\n    this.setState({ ...this.state, selectingPositions });\n  };\n\n  handleSelected = selectedPositions => {\n    this.setState({\n      ...this.state,\n      selectedPositions,\n      selectingPositions: null\n    });\n  };\n\n  handlePanning(panningPositions) {\n    this.setState({ ...this.state, panningPositions });\n    if (this.props.handlePan) {\n      this.props.handlePan(panningPositions);\n    }\n  }\n\n  handlePanned(pannedPositions) {\n    this.setState({ ...this.state, pannedPositions, panningPositions: null });\n    if (this.props.handlePanned) {\n      this.props.handlePanned(pannedPositions);\n    }\n  }\n}\n\nexport default PlotInteractionBoxProvider;\n","import React, { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ScatterPlotBundle from \"./lib\";\nimport PlotInteractionBoxProvider from \"./lib/PlotInteraction/PlotInteractionBoxProvider\";\nimport moment from \"moment\";\nimport \"./index.css\";\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleXRange: [1483058000000, 1513695600000],\n      currentOverlay: null,\n      dataSets: [],\n      dataPointColors: [\"#d50000\", \"#ff6d00\", \"#546e7a\"],\n      minY: -200,\n      maxY: 200,\n      height: 600\n    };\n    this.prevMaxY = 200;\n    this.prevPanDist = 0;\n    this.dataSetCount = 4;\n    this.handlePan = this.handlePan.bind(this);\n    this.handlePanned = this.handlePan.bind(this);\n  }\n\n  componentDidMount() {\n    let dataSets = [];\n    let dataPointColors = [];\n    let start = moment(1482858000000);\n    let end = moment(1513695600000);\n\n    for (let i = 0; i < this.dataSetCount; i++) {\n      dataSets[i] = [\n        ...this.generateDummyData(\n          [1182858000000, 1513695600000],\n          [-this.state.maxY, this.state.maxY],\n          100000000\n        )\n      ];\n      dataPointColors[i] = getRandomColor();\n    }\n\n    this.setState({\n      ...this.state,\n      dataSets: dataSets,\n      dataPointColors: dataPointColors\n    });\n\n    console.log(dataSets)\n  }\n\n  generateDummyData(xRange, yRange, dataFreq) {\n    let dummyData = [];\n\n    for (let curX = xRange[0]; curX < xRange[1]; curX += dataFreq) {\n      dummyData.push({\n        time: curX,\n        value: randomInteger(yRange[0], yRange[1])\n      });\n    }\n\n    return dummyData;\n  }\n\n  handlePan(e) {\n    let newMaxY =\n      this.state.maxY + (e.end.domY - e.start.domY - this.prevPanDist);\n\n    if (newMaxY > 150) {\n      this.setState({\n        ...this.state,\n        maxY: this.state.maxY + (e.end.domY - e.start.domY - this.prevPanDist)\n      });\n      this.prevPanDist = e.end.domY - e.start.domY;\n    }\n  }\n\n  handlePanned() {\n    this.prevPanDist = 0;\n  }\n\n  render() {\n    let { dataSets, visibleXRange, dataPointColors, minY, maxY, height } = this.state;\n    let configs = {\n      axis: {\n        isDynamicYAxis: true, // dynamic y axis = scale y axis according to current visible dataSets points\n        isDynamicXAxis: true, // dynamic x axis = use x axis passed in by the plot user\n        yAxisLabelPadding: 20,\n        xAxisPadding: 0\n      },\n      plotStyling: {\n        dotSize: 20\n      }\n    };\n\n    return (\n      <>\n        <div style={{ position: \"absolute\", cursor: \"ns-resize\" }}>\n          <PlotInteractionBoxProvider\n            width={40}\n            height={height}\n            handlePan={this.handlePan}\n            handlePanned={this.handlePanned}\n            render={() => {}}\n          />\n        </div>\n        <ScatterPlotBundle\n          dataSets={dataSets}\n          visibleXRange={visibleXRange}\n          minY={minY}\n          maxY={maxY}\n          width={1500}\n          height={height}\n          xAxisKey={\"time\"}\n          yAxisKey={\"value\"}\n          dataPointColors={dataPointColors}\n          isRenderPlotOnly={false}\n          configs={configs}\n        />\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
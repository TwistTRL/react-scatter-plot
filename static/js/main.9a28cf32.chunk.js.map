{"version":3,"sources":["lib/PlottingUtils.js","lib/ScatterPlot.jsx","lib/YAxis.js","lib/PlotAxisGrid.js","lib/index.js","lib/ScatterPlotBundle.js","lib/PlotInteraction/DragOverlay.js","lib/PlotInteraction/CountDown.js","lib/PlotInteraction/PlotInteractionBox.js","lib/PlotInteraction/PlotInteractionBoxProvider.js","index.js"],"names":["toDomYCoord_Linear","height","minY","maxY","dataY","ScatterPlot","props","canvasW","width","canvasH","dataPointColorCanvasCache","dotCanvasSize","this","scatterPlotCanvas","refs","scatterPlotCtx","getContext","drawScatterPlot","prevProps","prevState","nextProps","nextState","isEqual","state","ctx","dataSets","dataPointColors","visibleXRange","visibleYRange","xAxisKey","yAxisKey","configs","undefined","minX","maxX","plotStyling","dotSize","clearRect","i","length","curDataSet","circle","getCircle","j","curDataObj","domY","domX","Math","floor","drawImage","color","size","cachedDataPointColorCanvas","canvas","document","createElement","arc","PI","fillStyle","fill","className","ref","style","position","Component","require","createCanvas","round5","x","round","ceil","YAXIS_FONT_STYLE","YAxis","yAxisSkipInterval","yAxisLabelTextCanvasCache","yAxisLabelPadding","axis","yAxisLabels","generateYAxisLabels","yAxisCanvas","yAxisCtx","setUpCtx","drawYAxis","getYAxisLabelSkipInterval","labelPadding","labelTextHeight","numOfLabelsCanFit","curYAxisLabel","push","strokeStyle","lineWidth","font","textBaseline","textAlign","textHeight","measureText","yAxisLabelInterval","beginPath","moveTo","lineTo","getTextCanvas","stroke","yAxisCanvasCtx","txt","cachedLabelTextCanvas","fillText","PureComponent","PlotAxisGrid","horiGridLineCache","plotAxisGridCanvas","plotAxisGridCtx","yAxisIntervals","getHoriLineCanvas","drawYAxisGrid","cachedHoriLineCanvas","ScatterPlotBundle","isRenderPlotOnly","isDynamicXAxis","yAxisPadding","isDynamicYAxis","Number","MAX_VALUE","MIN_VALUE","visibleYRangeDistance","plotWidth","borderCollapse","DragOverlay","handleMouseMove","bind","handleMouseUp","cursor","addEventListener","removeEventListener","ev","stopPropagation","mouseMoveHandler","mouseUpHandler","CountDown","timeout","callback","setTimeout","clearTimeout","MODE_HOVERING","ACTION_MOUSEDOWN","ACTION_MOUSEMOVE","ACTION_MOUSEUP","ACTION_TIMEOUT","INTERACTION_MODEL_PANNING","PlotInteractionBox","handleMouseMove_Hovering","hoveringHandler","getCustomEventObject","handleMouseOut_Hovering","hoverEndHandler","handleMouseDown_Hovering","preventDefault","myEV","initialMouseDownPosition","transition","clickTimeout","autoSelectingTimeout","handleMouseMove_Clicking","selectingHandler","abs","handleMouseUp_Clicking","clickHandler","doubleClickHandler","prevClickTimeStamp","timeStamp","handleMouseMove_AutoSelecting","start","end","handleMouseUp_AutoSelecting","handleMouseMove_Selecting","handleMouseUp_Selecting","selectedHandler","mode","React","createRef","handleMouseMove_Panning","handleMouseUp_Panning","children","onMouseMove","onMouseOut","onMouseDown","action","nextMode","transitionGraph","setState","current","getBoundingClientRect","left","top","clientX","clientY","panningHandler","pannedHandler","PlotInteractionBoxProvider","handleHovering","hoveringPosition","handleHoverPosChange","handleHoverEnd","handleClick","clickPosition","handleDoubleClick","doubleClickPosition","handleSelecting","selectingPositions","handleSelected","selectedPositions","panningPositions","pannedPositions","handlePanning","handlePanned","render","handlePan","getRandomColor","random","App","currentOverlay","prevMaxY","prevPanDist","dataSetCount","moment","generateDummyData","console","log","xRange","yRange","dataFreq","min","max","dummyData","curX","time","value","e","xAxisPadding","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9a28cf32.chunk.js","sourcesContent":["//height: canvas px\n// minY: lowest value\n// maxY: highest value\n// dataY: value\nexport function toDomYCoord_Linear(height, minY, maxY, dataY) {\n    return height - (dataY - minY) / ((maxY - minY) / height);\n}\n\nexport function fromDomYCoord_Linear(height, minY, maxY, domY) {\n    return (height - domY) * ((maxY - minY) / height) + minY;\n}\n\nexport function toDomXCoord_Linear(width, minX, maxX, dataX) {\n    return (dataX - minX) / ((maxX - minX) / width);\n}\n\nexport function fromDomXCoord_Linear(width, minX, maxX, domX) {\n    return domX * ((maxX - minX) / width) + minX;\n}","import React, { Component } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { toDomYCoord_Linear, toDomXCoord_Linear } from \"./PlottingUtils\";\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasW = this.props.width;\n    this.canvasH = this.props.height;\n    // {color: canvas}\n    this.dataPointColorCanvasCache = {};\n    this.dotCanvasSize = 6;\n  }\n\n  componentDidMount() {\n    this.scatterPlotCanvas = this.refs.scatterPlotCanvas;\n    this.scatterPlotCtx = this.scatterPlotCanvas.getContext(\"2d\");\n    this.drawScatterPlot(this.scatterPlotCtx);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.drawScatterPlot(this.scatterPlotCtx);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || this.state !== nextState;\n  }\n\n  drawScatterPlot(ctx) {\n    let {\n      dataSets,\n      dataPointColors,\n      visibleXRange,\n      visibleYRange,\n      xAxisKey,\n      yAxisKey,\n      configs\n    } = this.props;\n\n    if (dataSets === undefined) {\n      return;\n    }\n\n    let dotCanvasSize =\n      configs.plotStyling.dotSize > 0\n        ? configs.plotStyling.dotSize\n        : this.dotCanvasSize;\n\n    ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n\n    for (let i = 0; i < dataSets.length; i++) {\n      let curDataSet = dataSets[i];\n      let circle = this.getCircle(dataPointColors[i], dotCanvasSize);\n\n      if (curDataSet.length > 0) {\n        for (let j = 0; j < curDataSet.length; j++) {\n          let curDataObj = curDataSet[j];\n          if (\n            curDataObj[xAxisKey] >= visibleXRange[0] &&\n            curDataObj[xAxisKey] <= visibleXRange[1]\n          ) {\n            let domY, domX;\n\n            domX = Math.floor(\n              toDomXCoord_Linear(\n                this.canvasW,\n                visibleXRange[0],\n                visibleXRange[1],\n                curDataObj[xAxisKey]\n              ) -\n                dotCanvasSize / 2\n            );\n            domY = Math.floor(\n              toDomYCoord_Linear(\n                this.canvasH,\n                visibleYRange[0],\n                visibleYRange[1],\n                curDataObj[yAxisKey]\n              ) -\n                dotCanvasSize / 2\n            );\n\n            ctx.drawImage(circle, domX, domY);\n          }\n        }\n      }\n    }\n  }\n\n  getCircle(color, size = 6) {\n    let cachedDataPointColorCanvas = this.dataPointColorCanvasCache[\n      color + size\n    ];\n\n    if (cachedDataPointColorCanvas === undefined) {\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = size;\n      canvas.height = size;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.arc(size / 2, size / 2, size / 3, 0, 2 * Math.PI);\n      ctx.fillStyle = color;\n      ctx.fill();\n      cachedDataPointColorCanvas = canvas;\n      this.dataPointColorCanvasCache[color + size] = canvas;\n    }\n\n    return cachedDataPointColorCanvas;\n  }\n\n  render() {\n    const styles = {\n      scatterPlotCanvas: {\n        position: \"absolute\"\n      }\n    };\n\n    return (\n      <canvas\n        className=\"scatter-plot-canvas\"\n        ref=\"scatterPlotCanvas\"\n        width={this.canvasW}\n        height={this.canvasH}\n        style={styles.scatterPlotCanvas}\n      />\n    );\n  }\n}\n\nexport default ScatterPlot;\n","import React, { PureComponent } from \"react\";\nconst { createCanvas } = require('canvas')\n\nfunction round5(x) {\n  return Math.round(Math.ceil(x / 5) * 5);\n}\n\nconst YAXIS_FONT_STYLE = {\n  size: 12,\n  color: \"black\",\n  fontFamily: \"MuseoSans, sans-serif\"\n};\n\nclass YAxis extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.canvasW = this.props.canvasW;\n    this.canvasH = this.props.canvasH;\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.yAxisSkipInterval = 50;\n    this.yAxisLabelTextCanvasCache = {};\n  }\n\n  componentDidMount() {\n    this.yAxisLabelPadding = this.props.configs.axis.yAxisLabelPadding;\n    this.yAxisLabels = this.generateYAxisLabels(this.maxY * 10);\n    this.yAxisCanvas = this.refs.yAxisCanvas;\n    this.yAxisCtx = this.yAxisCanvas.getContext(\"2d\");\n    this.setUpCtx(this.yAxisCtx);\n    this.drawYAxis(\n      this.yAxisCtx,\n      this.getYAxisLabelSkipInterval(\n        this.minY,\n        this.maxY,\n        this.canvasH,\n        this.yAxisLabelPadding,\n        20\n      )\n    );\n  }\n\n  componentDidUpdate() {\n    this.yAxisLabelPadding = this.props.configs.axis.yAxisLabelPadding;\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.drawYAxis(\n      this.yAxisCtx,\n      this.getYAxisLabelSkipInterval(\n        this.minY,\n        this.maxY,\n        this.canvasH,\n        this.yAxisLabelPadding,\n        20\n      )\n    );\n  }\n\n  toDomYCoord_Linear(height, minY, maxY, dataY) {\n    return height - (dataY - minY) / ((maxY - minY) / height);\n  }\n\n  getYAxisLabelSkipInterval(\n    minY,\n    maxY,\n    height,\n    labelPadding = 20,\n    labelTextHeight\n  ) {\n    let numOfLabelsCanFit = Math.round(\n      height / (labelTextHeight + labelPadding)\n    );\n\n    return round5((maxY - minY) / numOfLabelsCanFit);\n  }\n\n  generateYAxisLabels(maxY) {\n    let yAxisLabels = [];\n    let yAxisLabelInterval = 1;\n\n    for (\n      let curYAxisLabel = 0;\n      curYAxisLabel < round5(maxY);\n      curYAxisLabel += yAxisLabelInterval\n    ) {\n      yAxisLabels.push(curYAxisLabel);\n    }\n\n    return yAxisLabels;\n  }\n\n  setUpCtx(ctx) {\n    // y-axis vertical line styling\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 2.5;\n    // text styling\n    ctx.font =\n      \"500 \" + YAXIS_FONT_STYLE.size + \"px \" + YAXIS_FONT_STYLE.fontFamily;\n    ctx.lineWidth = 0.6;\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"right\";\n    ctx.fillStyle = \"gray\";\n    this.textHeight = ctx.measureText(\"M\").width;\n  }\n\n  drawYAxis(ctx, yAxisLabelInterval) {\n    let yAxisHorizontalLineWidth = 5;\n\n    // clear canvas\n    ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n    ctx.beginPath();\n\n    // draw the y-axis vertical line\n    ctx.moveTo(this.canvasW, 5);\n    ctx.lineTo(this.canvasW, this.canvasH - 5);\n\n    // draw the positive labels and horizontal lines\n    for (\n      let i = 0;\n      i < this.maxY + yAxisLabelInterval;\n      i += yAxisLabelInterval\n    ) {\n      let domY = Math.floor(\n        this.toDomYCoord_Linear(\n          this.canvasH,\n          this.minY,\n          this.maxY,\n          this.yAxisLabels[i]\n        )\n      );\n      ctx.moveTo(this.canvasW - yAxisHorizontalLineWidth, domY);\n      ctx.lineTo(this.canvasW, domY);\n      ctx.drawImage(\n        this.getTextCanvas(ctx, this.yAxisLabels[i]),\n        0,\n        domY - this.textHeight / 2\n      );\n    }\n\n    if (this.minY < 0) {\n      for (\n        let i = yAxisLabelInterval;\n        i < this.maxY + yAxisLabelInterval;\n        i += yAxisLabelInterval\n      ) {\n        let domY = Math.floor(\n          this.toDomYCoord_Linear(\n            this.canvasH,\n            this.minY,\n            this.maxY,\n            -this.yAxisLabels[i]\n          )\n        );\n        ctx.moveTo(this.canvasW - yAxisHorizontalLineWidth, domY);\n        ctx.lineTo(this.canvasW, domY);\n        ctx.drawImage(\n          this.getTextCanvas(ctx, -this.yAxisLabels[i]),\n          0,\n          domY - this.textHeight / 2\n        );\n      }\n    }\n\n    ctx.stroke();\n  }\n\n  getTextCanvas(yAxisCanvasCtx, txt) {\n    let cachedLabelTextCanvas = this.yAxisLabelTextCanvasCache[txt];\n\n    if (cachedLabelTextCanvas === undefined) {\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      canvas.width = this.canvasW;\n      canvas.height = this.textHeight * 2;\n\n      // text styling\n      ctx.font = YAXIS_FONT_STYLE.size + \"px \" + YAXIS_FONT_STYLE.fontFamily;\n      ctx.textBaseline = \"top\";\n      ctx.textAlign = \"right\";\n      ctx.fillStyle = YAXIS_FONT_STYLE.color;\n      ctx.fillText(txt, 30, 0);\n      cachedLabelTextCanvas = canvas;\n      this.yAxisLabelTextCanvasCache[txt] = canvas;\n    }\n\n    return cachedLabelTextCanvas;\n  }\n\n  render() {\n    // width, height, data from props\n    // reserve className for parent\n    return (\n      <canvas\n        className=\"plot-y-axis\"\n        ref=\"yAxisCanvas\"\n        width={this.canvasW}\n        height={this.canvasH}\n      />\n    );\n  }\n}\n\nexport default YAxis;\n","import React, { Component } from \"react\";\nimport { toDomYCoord_Linear, toDomXCoord_Linear } from \"./PlottingUtils\";\nimport isEqual from \"lodash.isequal\";\n\nfunction round5(x) {\n  return Math.round(Math.ceil(x / 5) * 5);\n}\n\nclass PlotAxisGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasW = this.props.canvasW;\n    this.canvasH = this.props.canvasH;\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.horiGridLineCache = undefined;\n  }\n\n  componentDidMount() {\n    this.plotAxisGridCanvas = this.refs.plotAxisGridCanvas;\n    this.plotAxisGridCtx = this.plotAxisGridCanvas.getContext(\"2d\");\n\n    // y-axis vertical line styling\n    this.plotAxisGridCtx.strokeStyle = \"rgba(211,211,211, 0.6)\";\n    this.plotAxisGridCtx.lineWidth = 1;\n\n    this.yAxisIntervals = this.generateYAxisLabels(this.maxY * 10);\n    this.horiGridLineCache = this.getHoriLineCanvas();\n    this.drawYAxisGrid(\n      this.plotAxisGridCtx,\n      this.getYAxisLabelSkipInterval(\n        this.minY,\n        this.maxY,\n        this.canvasH,\n        this.yAxisLabelPadding,\n        20\n      )\n    );\n  }\n\n  componentDidUpdate() {\n    this.minY = this.props.minY;\n    this.maxY = this.props.maxY;\n    this.drawYAxisGrid(\n      this.plotAxisGridCtx,\n      this.getYAxisLabelSkipInterval(\n        this.minY,\n        this.maxY,\n        this.canvasH,\n        this.yAxisLabelPadding,\n        20\n      )\n    );\n  }\n\n  generateYAxisLabels(maxY) {\n    let yAxisLabels = [];\n    let yAxisLabelInterval = 1;\n\n    for (\n      let curYAxisLabel = 0;\n      curYAxisLabel < round5(maxY);\n      curYAxisLabel += yAxisLabelInterval\n    ) {\n      yAxisLabels.push(curYAxisLabel);\n    }\n\n    return yAxisLabels;\n  }\n\n  getYAxisLabelSkipInterval(\n    minY,\n    maxY,\n    height,\n    labelPadding = 20,\n    labelTextHeight\n  ) {\n    let numOfLabelsCanFit = Math.round(\n      height / (labelTextHeight + labelPadding)\n    );\n\n    return round5((maxY - minY) / numOfLabelsCanFit);\n  }\n\n  drawYAxisGrid(ctx, yAxisIntervals) {\n    // clear canvas\n    ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n    ctx.beginPath();\n\n    for (let i = 0; i < this.maxY; i += yAxisIntervals) {\n      let domY = Math.floor(\n        toDomYCoord_Linear(\n          this.canvasH,\n          this.minY,\n          this.maxY,\n          this.yAxisIntervals[i]\n        )\n      );\n      // ctx.moveTo(0, domY);\n      // ctx.lineTo(this.canvasW, domY);\n      ctx.drawImage(this.horiGridLineCache, 0, domY - 0.5);\n    }\n\n    if (this.minY < 0) {\n      for (let i = yAxisIntervals; i < this.maxY; i += yAxisIntervals) {\n        let domY = Math.floor(\n          toDomYCoord_Linear(\n            this.canvasH,\n            this.minY,\n            this.maxY,\n            -this.yAxisIntervals[i]\n          )\n        );\n        // ctx.moveTo(0, domY);\n        // ctx.lineTo(this.canvasW, domY);\n        ctx.drawImage(this.horiGridLineCache, 0, domY - 0.5 );\n      }\n    }\n\n    ctx.stroke();\n  }\n\n  getHoriLineCanvas() {\n    let cachedHoriLineCanvas = this.cachedHoriLineCanvas;\n\n    if (cachedHoriLineCanvas === undefined) {\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      canvas.width = this.canvasW;\n      canvas.height = 1;\n\n      ctx.strokeStyle = \"gray\"\n      ctx.lineWidth = 1\n      ctx.moveTo(0, 0);\n      ctx.lineTo(Math.floor(canvas.width), 0);\n      ctx.stroke();\n      cachedHoriLineCanvas = canvas;\n    }\n\n    return cachedHoriLineCanvas;\n  }\n\n  render() {\n    // width, height, data from props\n    // reserve className for parent\n    return (\n      <canvas\n        className=\"plot-axis-grid\"\n        ref=\"plotAxisGridCanvas\"\n        width={this.canvasW}\n        height={this.canvasH}\n      />\n    );\n  }\n}\n\nexport default PlotAxisGrid;\n","import ScatterPlotBundle from \"./ScatterPlotBundle\";\nexport default ScatterPlotBundle;","import React, { Component } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport ScatterPlot from \"./ScatterPlot\";\nimport YAxis from \"./YAxis\";\nimport PlotAxisGrid from \"./PlotAxisGrid\";\n\nfunction round5(x) {\n  return Math.ceil(x / 5) * 5;\n}\n\nclass ScatterPlotBundle extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || this.state !== nextState;\n  }\n\n  render() {\n    const {\n      dataSets,\n      dataPointColors,\n      width,\n      height,\n      minY,\n      maxY,\n      xAxisKey,\n      yAxisKey,\n      configs,\n      isRenderPlotOnly\n    } = this.props;\n\n    if (dataSets.length < 1 || dataSets === undefined) {\n      return null;\n    }\n\n    let { isDynamicXAxis, isDynamicYAxis, yAxisPadding } = configs.axis;\n    let visibleYRange = [Number.MAX_VALUE, Number.MIN_VALUE];\n    let visibleXRange = isDynamicXAxis\n      ? this.props.visibleXRange\n      : [Number.MAX_VALUE, Number.MIN_VALUE];\n    let visibleYRangeDistance = 0;\n    let yAxisPanelWidth = 40;\n    let plotWidth = width - yAxisPanelWidth;\n\n    visibleYRangeDistance = round5(visibleYRange[1] - visibleYRange[0]);\n    visibleYRange[0] -=\n      yAxisPadding > 0 ? yAxisPadding : visibleYRangeDistance * 0.1; // TODO: figure out y padding\n    visibleYRange[1] +=\n      yAxisPadding > 0 ? yAxisPadding : visibleYRangeDistance * 0.1;\n\n    if (!isRenderPlotOnly) {\n      visibleYRange = maxY !== null ? [minY, maxY] : visibleYRange;\n      return (\n        <table className=\"chart-table\" style={{ borderCollapse: \"collapse\" }}>\n          <tbody>\n            <tr className=\"chart-table-row\">\n              <td\n                className=\"chart-table-col\"\n                style={{ width: yAxisPanelWidth }}\n              >\n                {\" \"}\n                <YAxis\n                  canvasW={yAxisPanelWidth}\n                  canvasH={height}\n                  minY={visibleYRange[0]}\n                  maxY={visibleYRange[1]}\n                  configs={configs}\n                />\n              </td>\n              <td className=\"chart-table-col\" style={{ width: plotWidth }}>\n                {\" \"}\n                <div style={{ position: \"absolute\" }}>\n                  <PlotAxisGrid\n                    canvasW={plotWidth}\n                    canvasH={height}\n                    minY={visibleYRange[0]}\n                    maxY={visibleYRange[1]}\n                    configs={configs}\n                  />\n                </div>\n                <div style={{ position: \"absolute\" }}>\n                  <ScatterPlot\n                    dataSets={dataSets}\n                    dataPointColors={dataPointColors}\n                    visibleXRange={visibleXRange}\n                    visibleYRange={visibleYRange}\n                    width={plotWidth}\n                    height={height}\n                    xAxisKey={xAxisKey}\n                    yAxisKey={yAxisKey}\n                    configs={configs}\n                  />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <ScatterPlot\n        dataSets={dataSets}\n        dataPointColors={dataPointColors}\n        visibleXRange={visibleXRange}\n        visibleYRange={maxY !== null ? [minY, maxY] : visibleYRange}\n        width={plotWidth}\n        height={height}\n        xAxisKey={xAxisKey}\n        yAxisKey={yAxisKey}\n        configs={configs}\n      />\n    );\n  }\n}\n\nexport default ScatterPlotBundle;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n// CSS\nimport \"./DragOverlay.css\";\n\nclass DragOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  render() {\n    let { cursor } = this.props;\n    return <div className=\"fullscreen\" style={{ cursor: cursor }}></div>;\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.handleMouseMove, true);\n    document.addEventListener(\"mouseup\", this.handleMouseUp, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", this.handleMouseMove, true);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp, true);\n  }\n\n  handleMouseMove(ev) {\n    ev.stopPropagation();\n    let { mouseMoveHandler } = this.props;\n    mouseMoveHandler(ev);\n  }\n\n  handleMouseUp(ev) {\n    ev.stopPropagation();\n    let { mouseUpHandler } = this.props;\n    mouseUpHandler(ev);\n  }\n}\n\nDragOverlay.propTypes = {\n  cursor: PropTypes.string.isRequired,\n  mouseMoveHandler: PropTypes.func.isRequired,\n  mouseUpHandler: PropTypes.func.isRequired\n};\n\nexport default DragOverlay;\n","import {PureComponent} from \"react\"\n\nclass CountDown extends PureComponent{\n  render(){\n    return null\n  }\n  \n  componentDidMount(){\n    let {timeout,callback} = this.props\n    this.timeout = setTimeout(callback,timeout)\n  }\n\n  componentDidUpdate(){\n    clearTimeout(this.timeout)\n    let {timeout,callback} = this.props\n    this.timeout = setTimeout(callback,timeout)\n  }\n\n  componentWillUnmount(){\n    clearTimeout(this.timeout)\n  }\n}\n\nexport default CountDown\n","import React, { PureComponent } from \"react\";\n// Components\nimport DragOverlay from \"./DragOverlay\";\nimport CountDown from \"./CountDown\";\n\n// CSS\nimport \"./PlotInteractionBox.css\";\n\nexport const MODE_HOVERING = \"hovering\";\nexport const MODE_CLICKING = \"clicking\";\nexport const MODE_AUTOSELECTING = \"autoSelecting\";\nexport const MODE_SELECTING = \"selecting\";\nexport const MODE_PANNING = \"panning\";\n\nexport const ACTION_MOUSEDOWN = \"mouseDown\";\nexport const ACTION_MOUSEMOVE = \"mouseMove\";\nexport const ACTION_MOUSEUP = \"mouseUp\";\nexport const ACTION_TIMEOUT = \"timeout\";\n\nexport const INTERACTION_MODEL_DEFAULT = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: {\n    [ACTION_TIMEOUT]: MODE_AUTOSELECTING,\n    [ACTION_MOUSEMOVE]: MODE_SELECTING,\n    [ACTION_MOUSEUP]: MODE_HOVERING\n  },\n  [MODE_AUTOSELECTING]: {\n    [ACTION_TIMEOUT]: MODE_PANNING,\n    [ACTION_MOUSEMOVE]: MODE_SELECTING\n  },\n  [MODE_SELECTING]: { [ACTION_MOUSEUP]: MODE_HOVERING },\n  [MODE_PANNING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nexport const INTERACTION_MODEL_SELECTING = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: {\n    [ACTION_TIMEOUT]: MODE_SELECTING,\n    [ACTION_MOUSEMOVE]: MODE_SELECTING,\n    [ACTION_MOUSEUP]: MODE_HOVERING\n  },\n  [MODE_SELECTING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nexport const INTERACTION_MODEL_PANNING = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: {\n    [ACTION_TIMEOUT]: MODE_PANNING,\n    [ACTION_MOUSEMOVE]: MODE_PANNING,\n    [ACTION_MOUSEUP]: MODE_HOVERING\n  },\n  [MODE_PANNING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nexport const INTERACTION_MODEL_BARE = {\n  [MODE_HOVERING]: { [ACTION_MOUSEDOWN]: MODE_CLICKING },\n  [MODE_CLICKING]: { [ACTION_MOUSEUP]: MODE_HOVERING }\n};\n\nclass PlotInteractionBox extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { mode: MODE_HOVERING };\n    this.ref = React.createRef();\n    this.initialMouseDownPosition = null;\n    this.prevClickTimeStamp = null;\n    this.handleMouseMove_Panning = this.handleMouseMove_Panning.bind(this);\n    this.handleMouseUp_Panning = this.handleMouseUp_Panning.bind(this);\n  }\n\n  render() {\n    let { width, height, children } = this.props;\n    let style = { width, height };\n\n    switch (this.state.mode) {\n      case MODE_HOVERING:\n        return (\n          <div>\n            <div\n              ref={this.ref}\n              style={style}\n              onMouseMove={this.handleMouseMove_Hovering}\n              onMouseOut={this.handleMouseOut_Hovering}\n              onMouseDown={this.handleMouseDown_Hovering}\n            >\n              {children}\n            </div>\n          </div>\n        );\n      case MODE_CLICKING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_Clicking}\n              mouseUpHandler={this.handleMouseUp_Clicking}\n              cursor=\"point\"\n            />\n            <CountDown timeout={200} callback={this.clickTimeout} />\n          </div>\n        );\n      case MODE_AUTOSELECTING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_AutoSelecting}\n              mouseUpHandler={this.handleMouseUp_AutoSelecting}\n              cursor=\"nesw-resize\"\n            />\n            <CountDown timeout={500} callback={this.autoSelectingTimeout} />\n          </div>\n        );\n      case MODE_SELECTING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_Selecting}\n              mouseUpHandler={this.handleMouseUp_Selecting}\n              cursor=\"nesw-resize\"\n            />\n          </div>\n        );\n      case MODE_PANNING:\n        return (\n          <div>\n            <div ref={this.ref} style={style}>\n              {children}\n            </div>\n            <DragOverlay\n              mouseMoveHandler={this.handleMouseMove_Panning}\n              mouseUpHandler={this.handleMouseUp_Panning}\n              cursor=\"grabbing\"\n            />\n          </div>\n        );\n      default:\n        return <p>{this.state.mode}</p>;\n      //throw new Error(\"ProgrammerTooDumbError\");\n    }\n  }\n\n  transition(action) {\n    let { transitionGraph } = this.props;\n    let { mode } = this.state;\n    let nextMode = transitionGraph[mode][action];\n    if (nextMode) {\n      this.setState({ mode: nextMode });\n    }\n  }\n\n  getCustomEventObject(ev) {\n    let { left, top } = this.ref.current.getBoundingClientRect();\n    let { clientX, clientY } = ev;\n    let domX = clientX - left;\n    let domY = clientY - top;\n    return { domX, domY, clientX, clientY };\n  }\n\n  handleMouseMove_Hovering = ev => {\n    let { hoveringHandler } = this.props;\n    let myEV = this.getCustomEventObject(ev);\n    hoveringHandler(myEV);\n  };\n\n  handleMouseOut_Hovering = ev => {\n    let { hoverEndHandler } = this.props;\n    hoverEndHandler();\n  };\n\n  handleMouseDown_Hovering = ev => {\n    let { hoverEndHandler } = this.props;\n    ev.preventDefault();\n    let myEV = this.getCustomEventObject(ev);\n    this.initialMouseDownPosition = myEV;\n    hoverEndHandler();\n    this.transition(ACTION_MOUSEDOWN);\n  };\n\n  clickTimeout = () => {\n    this.transition(ACTION_TIMEOUT);\n  };\n\n  autoSelectingTimeout = () => {\n    this.transition(ACTION_TIMEOUT);\n  };\n\n  handleMouseMove_Clicking = ev => {\n    let { selectingHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    if (\n      Math.abs(myEV.domX - initialMouseDownPosition.domX) < 10 ||\n      Math.abs(myEV.domY - initialMouseDownPosition.domX) < 10\n    ) {\n      return;\n    } else {\n      this.transition(ACTION_MOUSEMOVE);\n    }\n  };\n\n  handleMouseUp_Clicking = ev => {\n    let { clickHandler, doubleClickHandler } = this.props;\n    let { prevClickTimeStamp } = this;\n    let myEV = this.getCustomEventObject(ev);\n    if (\n      prevClickTimeStamp === null ||\n      prevClickTimeStamp + 200 < ev.timeStamp\n    ) {\n      this.prevClickTimeStamp = ev.timeStamp;\n      clickHandler(myEV);\n    } else {\n      this.prevClickTimeStamp = null;\n      doubleClickHandler(myEV);\n    }\n    this.transition(ACTION_MOUSEUP);\n  };\n\n  handleMouseMove_AutoSelecting = ev => {\n    let { selectingHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    if (\n      Math.abs(myEV.domX - initialMouseDownPosition.domX) < 10 ||\n      Math.abs(myEV.domY - initialMouseDownPosition.domX) < 10\n    ) {\n      return;\n    } else {\n      selectingHandler({ start: initialMouseDownPosition, end: myEV });\n      this.transition(ACTION_MOUSEMOVE);\n    }\n  };\n\n  handleMouseUp_AutoSelecting = ev => {\n    this.transition(ACTION_MOUSEUP);\n  };\n\n  handleMouseMove_Selecting = ev => {\n    let { selectingHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    selectingHandler({ start: initialMouseDownPosition, end: myEV });\n  };\n\n  handleMouseUp_Selecting = ev => {\n    let { selectedHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    selectedHandler({ start: initialMouseDownPosition, end: myEV });\n    this.transition(ACTION_MOUSEUP);\n  };\n\n  handleMouseMove_Panning(ev) {\n    let { panningHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    panningHandler({ start: initialMouseDownPosition, end: myEV });\n  }\n\n  handleMouseUp_Panning(ev) {\n    let { pannedHandler } = this.props;\n    let { initialMouseDownPosition } = this;\n    let myEV = this.getCustomEventObject(ev);\n    pannedHandler({ start: initialMouseDownPosition, end: myEV });\n    this.transition(ACTION_MOUSEUP);\n  }\n}\n\nexport default PlotInteractionBox;\n","import React, { Component } from \"react\";\nimport PlotInteractionBox, {\n  INTERACTION_MODEL_PANNING\n} from \"./PlotInteractionBox\";\n\nclass PlotInteractionBoxProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoveringPosition: null,\n      clickPosition: null,\n      doubleClickPosition: null,\n      selectingPositions: null,\n      selectedPositions: null,\n      panningPositions: null,\n      pannedPositions: null\n    };\n    this.handlePanning = this.handlePanning.bind(this);\n    this.handlePanned = this.handlePanned.bind(this);\n  }\n\n  render() {\n    let { render, width, height } = this.props;\n    return (\n      <PlotInteractionBox\n        width={width}\n        height={height}\n        transitionGraph={INTERACTION_MODEL_PANNING}\n        hoveringHandler={this.handleHovering}\n        hoverEndHandler={this.handleHoverEnd}\n        clickHandler={this.handleClick}\n        doubleClickHandler={this.handleDoubleClick}\n        selectingHandler={this.handleSelecting}\n        selectedHandler={this.handleSelected}\n        panningHandler={this.handlePanning}\n        pannedHandler={this.handlePanned}\n      >\n        {render(this.state)}\n      </PlotInteractionBox>\n    );\n  }\n\n  handleHovering = hoveringPosition => {\n    this.setState({ ...this.state, hoveringPosition });\n    if (this.props.handleHoverPosChange) {\n      this.props.handleHoverPosChange(hoveringPosition);\n    }\n  };\n\n  handleHoverEnd = () => {\n    this.setState({ ...this.state, hoveringPosition: null });\n    if (this.props.handleHoverPosChange) {\n      this.props.handleHoverPosChange(null);\n    }\n  };\n\n  handleClick = clickPosition => {\n    this.setState({\n      ...this.state,\n      clickPosition\n    });\n    if (this.props.handleClick) {\n      this.props.handleClick();\n    }\n  };\n\n  handleDoubleClick = doubleClickPosition => {\n    this.setState({ ...this.state, doubleClickPosition });\n  };\n\n  handleSelecting = selectingPositions => {\n    this.setState({ ...this.state, selectingPositions });\n  };\n\n  handleSelected = selectedPositions => {\n    this.setState({\n      ...this.state,\n      selectedPositions,\n      selectingPositions: null\n    });\n  };\n\n  handlePanning(panningPositions) {\n    this.setState({ ...this.state, panningPositions });\n    if (this.props.handlePan) {\n      this.props.handlePan(panningPositions);\n    }\n  }\n\n  handlePanned(pannedPositions) {\n    this.setState({ ...this.state, pannedPositions, panningPositions: null });\n    if (this.props.handlePanned) {\n      this.props.handlePanned(pannedPositions);\n    }\n  }\n}\n\nexport default PlotInteractionBoxProvider;\n","import React, { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ScatterPlotBundle from \"./lib\";\nimport PlotInteractionBoxProvider from \"./lib/PlotInteraction/PlotInteractionBoxProvider\";\nimport moment from \"moment\";\nimport \"./index.css\";\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleXRange: [1513058000000, 1513695600000],\n      currentOverlay: null,\n      dataSets: [],\n      dataPointColors: [\"#d50000\", \"#ff6d00\", \"#546e7a\"],\n      minY: -200,\n      maxY: 200,\n      height: 600\n    };\n    this.prevMaxY = 200;\n    this.prevPanDist = 0;\n    this.dataSetCount = 4;\n    this.handlePan = this.handlePan.bind(this);\n    this.handlePanned = this.handlePanned.bind(this);\n  }\n\n  componentDidMount() {\n    let dataSets = [];\n    let dataPointColors = [];\n    let start = moment(1482858000000);\n    let end = moment(1513695600000);\n\n    for (let i = 0; i < this.dataSetCount; i++) {\n      dataSets[i] = [\n        ...this.generateDummyData(\n          [1182858000000, 1513695600000],\n          [-this.state.maxY, this.state.maxY],\n          100000000\n        )\n      ];\n      dataPointColors[i] = getRandomColor();\n    }\n\n    this.setState({\n      ...this.state,\n      dataSets: dataSets,\n      dataPointColors: dataPointColors\n    });\n\n    console.log(dataSets)\n  }\n\n  generateDummyData(xRange, yRange, dataFreq) {\n    let dummyData = [];\n\n    for (let curX = xRange[0]; curX < xRange[1]; curX += dataFreq) {\n      dummyData.push({\n        time: curX,\n        value: randomInteger(yRange[0], yRange[1])\n      });\n    }\n\n    return dummyData;\n  }\n\n  handlePan(e) {\n    let newMaxY =\n      this.state.maxY + (e.end.domY - e.start.domY - this.prevPanDist);\n\n    if (newMaxY > 150) {\n      this.setState({\n        ...this.state,\n        maxY: this.state.maxY + (e.end.domY - e.start.domY - this.prevPanDist)\n      });\n      this.prevPanDist = e.end.domY - e.start.domY;\n    }\n  }\n\n  handlePanned() {\n    this.prevPanDist = 0;\n  }\n\n  render() {\n    let { dataSets, visibleXRange, dataPointColors, minY, maxY, height } = this.state;\n    let configs = {\n      axis: {\n        isDynamicYAxis: true, // dynamic y axis = scale y axis according to current visible dataSets points\n        isDynamicXAxis: true, // dynamic x axis = use x axis passed in by the plot user\n        yAxisLabelPadding: 20,\n        xAxisPadding: 0\n      },\n      plotStyling: {\n        dotSize: 10\n      }\n    };\n\n    return (\n      <>\n        <div style={{ position: \"absolute\", cursor: \"ns-resize\" }}>\n          <PlotInteractionBoxProvider\n            width={40}\n            height={height}\n            handlePan={this.handlePan}\n            handlePanned={this.handlePanned}\n            render={() => {}}\n          />\n        </div>\n        <ScatterPlotBundle\n          dataSets={dataSets}\n          visibleXRange={visibleXRange}\n          minY={minY}\n          maxY={maxY}\n          width={1500}\n          height={height}\n          xAxisKey={\"time\"}\n          yAxisKey={\"value\"}\n          dataPointColors={dataPointColors}\n          isRenderPlotOnly={false}\n          configs={configs}\n        />\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}